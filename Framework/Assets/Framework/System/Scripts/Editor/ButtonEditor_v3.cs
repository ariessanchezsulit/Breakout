using FullInspector;
using System.Collections.Generic;
using System.IO;
using UnityEditor;
using UnityEngine;

public class ButtonEditor_v3 : BaseScriptableObject
{
    public List<string> ButtonTypes;

    const string path = "Assets/Framework/Game/Scripts/Buttons/EButtonType.cs";
    const string buttonspath = "FrameworkFiles/FrameworkButtons.dat";

    private void Awake()
    {
        RefreshTextFile();
    }

    //REFRESH THE LIST BY READING THE LINES OF THE TEXT FILE
    [InspectorButton]
    private void RefreshTextFile()
    {
        ButtonTypes = new List<string>(File.ReadAllLines(buttonspath));
    }

    [InspectorButton]
    private void GenerateButtonEnum()
    {
        //UPDATES TEXT FILE USING THE CURRENT LIST
        if (File.Exists(buttonspath) == true)
        {
            using (StreamWriter outfile = new StreamWriter(buttonspath))
            {
                for (int i = 0; i < ButtonTypes.Count; i++)
                {
                    outfile.WriteLine(ButtonTypes[i]);

                }
            }
        }

        // delete old class
        if (File.Exists(path))
        {
            File.Delete(path);
        }

        if (File.Exists(path) == false)
        {
            // do not overwrite
            using (StreamWriter outfile = new StreamWriter(path))
            {
                outfile.WriteLine("// AUTOGENERATED: DO NOT EDIT");
                outfile.WriteLine("using System;");
                outfile.WriteLine(string.Empty);
                outfile.WriteLine("namespace Framework");
                outfile.WriteLine("{");
                outfile.WriteLine("\t[Serializable]");
                outfile.WriteLine("\tpublic enum EButtonType");
                outfile.WriteLine("\t{");

                
                for (int i = 0; i < ButtonTypes.Count; i++)
                {
                    outfile.WriteLine("\t\t{0},", ButtonTypes[i]);
                }
                

                outfile.WriteLine("\t}");
                outfile.WriteLine("}");
            }
        }

        AssetDatabase.Refresh();
    }

}
